{"id":"node_modules/inversify/lib/syntax/binding_when_syntax.js","dependencies":[{"name":"/Users/aiyushdhar/Projects/curious-js/package.json","includedInParent":true,"mtime":1596799900330},{"name":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/package.json","includedInParent":true,"mtime":1596796769792},{"name":"./binding_on_syntax","loc":{"line":3,"column":34},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_when_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_on_syntax.js"},{"name":"./constraint_helpers","loc":{"line":4,"column":35},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_when_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/constraint_helpers.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar constraint_helpers_1 = require(\"./constraint_helpers\");\nvar BindingWhenSyntax = (function () {\n    function BindingWhenSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingWhenSyntax.prototype.when = function (constraint) {\n        this._binding.constraint = constraint;\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n        this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\n        this._binding.constraint = function (request) {\n            var targetIsDefault = (request.target !== null) &&\n                (!request.target.isNamed()) &&\n                (!request.target.isTagged());\n            return targetIsDefault;\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    return BindingWhenSyntax;\n}());\nexports.BindingWhenSyntax = BindingWhenSyntax;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_when_syntax.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}}],"sources":{"node_modules/inversify/lib/syntax/binding_when_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar constraint_helpers_1 = require(\"./constraint_helpers\");\nvar BindingWhenSyntax = (function () {\n    function BindingWhenSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingWhenSyntax.prototype.when = function (constraint) {\n        this._binding.constraint = constraint;\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n        this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\n        this._binding.constraint = function (request) {\n            var targetIsDefault = (request.target !== null) &&\n                (!request.target.isNamed()) &&\n                (!request.target.isTagged());\n            return targetIsDefault;\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n    };\n    return BindingWhenSyntax;\n}());\nexports.BindingWhenSyntax = BindingWhenSyntax;\n"},"lineCount":99}},"error":null,"hash":"c1e5029d0284e494c18de9e82a017be6","cacheData":{"env":{}}}