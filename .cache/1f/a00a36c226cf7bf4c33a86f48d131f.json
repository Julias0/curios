{"id":"node_modules/inversify/lib/annotation/injectable.js","dependencies":[{"name":"/Users/aiyushdhar/Projects/curious-js/package.json","includedInParent":true,"mtime":1596799900330},{"name":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/package.json","includedInParent":true,"mtime":1596796769792},{"name":"../constants/error_msgs","loc":{"line":3,"column":26},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/annotation/injectable.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/constants/error_msgs.js"},{"name":"../constants/metadata_keys","loc":{"line":4,"column":27},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/annotation/injectable.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/constants/metadata_keys.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERRORS_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction injectable() {\n    return function (target) {\n        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {\n            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\n        }\n        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\n        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\n        return target;\n    };\n}\nexports.injectable = injectable;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inversify/lib/annotation/injectable.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/inversify/lib/annotation/injectable.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERRORS_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction injectable() {\n    return function (target) {\n        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {\n            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\n        }\n        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\n        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\n        return target;\n    };\n}\nexports.injectable = injectable;\n"},"lineCount":16}},"error":null,"hash":"b1b0f4672e7d694371991ae72c1dd4cd","cacheData":{"env":{}}}