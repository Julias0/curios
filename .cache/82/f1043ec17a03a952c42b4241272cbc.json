{"id":"node_modules/inversify/lib/syntax/binding_to_syntax.js","dependencies":[{"name":"/Users/aiyushdhar/Projects/curious-js/package.json","includedInParent":true,"mtime":1596799900330},{"name":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/package.json","includedInParent":true,"mtime":1596796769792},{"name":"../constants/error_msgs","loc":{"line":3,"column":25},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_to_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/constants/error_msgs.js"},{"name":"../constants/literal_types","loc":{"line":4,"column":30},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_to_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/constants/literal_types.js"},{"name":"./binding_in_when_on_syntax","loc":{"line":5,"column":42},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_to_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js"},{"name":"./binding_when_on_syntax","loc":{"line":6,"column":39},"parent":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_to_syntax.js","resolved":"/Users/aiyushdhar/Projects/curious-js/node_modules/inversify/lib/syntax/binding_when_on_syntax.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar binding_in_when_on_syntax_1 = require(\"./binding_in_when_on_syntax\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar BindingToSyntax = (function () {\n    function BindingToSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingToSyntax.prototype.to = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Instance;\n        this._binding.implementationType = constructor;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toSelf = function () {\n        if (typeof this._binding.serviceIdentifier !== \"function\") {\n            throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\n        }\n        var self = this._binding.serviceIdentifier;\n        return this.to(self);\n    };\n    BindingToSyntax.prototype.toConstantValue = function (value) {\n        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;\n        this._binding.cache = value;\n        this._binding.dynamicValue = null;\n        this._binding.implementationType = null;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toDynamicValue = function (func) {\n        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;\n        this._binding.cache = null;\n        this._binding.dynamicValue = func;\n        this._binding.implementationType = null;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toConstructor = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;\n        this._binding.implementationType = constructor;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFactory = function (factory) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = factory;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFunction = function (func) {\n        if (typeof func !== \"function\") {\n            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\n        }\n        var bindingWhenOnSyntax = this.toConstantValue(func);\n        this._binding.type = literal_types_1.BindingTypeEnum.Function;\n        return bindingWhenOnSyntax;\n    };\n    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = function (context) {\n            var autofactory = function () { return context.container.get(serviceIdentifier); };\n            return autofactory;\n        };\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toProvider = function (provider) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Provider;\n        this._binding.provider = provider;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toService = function (service) {\n        this.toDynamicValue(function (context) { return context.container.get(service); });\n    };\n    return BindingToSyntax;\n}());\nexports.BindingToSyntax = BindingToSyntax;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/inversify/lib/syntax/binding_to_syntax.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}}],"sources":{"node_modules/inversify/lib/syntax/binding_to_syntax.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar binding_in_when_on_syntax_1 = require(\"./binding_in_when_on_syntax\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar BindingToSyntax = (function () {\n    function BindingToSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingToSyntax.prototype.to = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Instance;\n        this._binding.implementationType = constructor;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toSelf = function () {\n        if (typeof this._binding.serviceIdentifier !== \"function\") {\n            throw new Error(\"\" + ERROR_MSGS.INVALID_TO_SELF_VALUE);\n        }\n        var self = this._binding.serviceIdentifier;\n        return this.to(self);\n    };\n    BindingToSyntax.prototype.toConstantValue = function (value) {\n        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;\n        this._binding.cache = value;\n        this._binding.dynamicValue = null;\n        this._binding.implementationType = null;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toDynamicValue = function (func) {\n        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;\n        this._binding.cache = null;\n        this._binding.dynamicValue = func;\n        this._binding.implementationType = null;\n        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toConstructor = function (constructor) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;\n        this._binding.implementationType = constructor;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFactory = function (factory) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = factory;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toFunction = function (func) {\n        if (typeof func !== \"function\") {\n            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);\n        }\n        var bindingWhenOnSyntax = this.toConstantValue(func);\n        this._binding.type = literal_types_1.BindingTypeEnum.Function;\n        return bindingWhenOnSyntax;\n    };\n    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Factory;\n        this._binding.factory = function (context) {\n            var autofactory = function () { return context.container.get(serviceIdentifier); };\n            return autofactory;\n        };\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toProvider = function (provider) {\n        this._binding.type = literal_types_1.BindingTypeEnum.Provider;\n        this._binding.provider = provider;\n        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);\n    };\n    BindingToSyntax.prototype.toService = function (service) {\n        this.toDynamicValue(function (context) { return context.container.get(service); });\n    };\n    return BindingToSyntax;\n}());\nexports.BindingToSyntax = BindingToSyntax;\n"},"lineCount":74}},"error":null,"hash":"f10250cbc5a6b309af23f2d3232cffa0","cacheData":{"env":{}}}